# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: TEST
  displayName: TESTING-STAGES
  jobs:
  - job: TESTJOB
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

    - script: |
        echo Add other tasks to build, test, and deploy your project.
        echo See https://aka.ms/yaml
      displayName: 'Run a multi-line script'


- stage: DOCKER_PUSH_HUB
  displayName: TEST-DOCKER-HUB-PUSH
  jobs:
  - job:
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'MY-DOCKER-HUB-REGISTRY'
        command: 'login'

    - task: Docker@2
      inputs:
        containerRegistry: 'MY-DOCKER-HUB-REGISTRY'
        repository: 'venuchanapathi1998 / my-clock-app-repo'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

- stage: DOCKER_PUSH_ACR
  displayName: TEST-DOCKER-ACR-PUSH
  jobs:
  - job:
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'MY-ACR-CONNECTION'
        repository: 'test-acr-push'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
    - task: PythonScript@0
      inputs:
        scriptSource: 'filePath'
        scriptPath: '$(System.DefaultWorkingDirectory)/clock-script.py'


- stage: DEPLOY
  displayName: Archiving
  jobs:
  - job: 
    pool:
      vmImage: ubuntu-latest
    steps: 
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    